name: Mon Workflow

on:
  push:
    branches: [develop]

jobs:
  test-memory:
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Verif fichier jpg
        run: |
          IMG_REPLACEMENT="../../anthony.jpeg"    #cherche l'image de remplacement
          for file in $(find . -name '*.jpg'); do    #trouve et verifie les fich>           echo "Vérification de $file"
            if ! file "$file" | grep -q 'JPEG'; then
              echo "$file est corrompu. Remplacement..."
              cp "$IMG_REPLACEMENT" "$file"    #remplace si corrompu
            fi
          done
      - name: commit change
        run: |
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Remplacement des fichiers JPEG corrompus"
          else
            echo "Aucun changement à committer"
          fi

  build-memory:
    runs-on: [self-hosted, linux, x64]
    needs: test-memory

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t doudouchevalier/memory:latest .
    - name: Verif fichier jpg
      run: |
        IMG_REPLACEMENT="/home/user/memory_lozano/img_st.jpg"    #cherche l'image de remplacement
        for file in $(find . -name '*.jpg'); do    #trouve et verifie les fich>           echo "Vérification de $file"
          if ! file "$file" | grep -q 'JPEG'; then
            echo "$file est corrompu. Remplacement..."
            cp "$IMG_REPLACEMENT" "$file"    #remplace si corrompu
          fi
        done
    - name: commit change
      run: |
        git add .
        if ! git diff --cached --quiet; then
          git commit -m "Remplacement des fichiers JPEG corrompus"
        else
          echo "Aucun changement à committer"
        fi  push-memory:
    runs-on: [self-hosted, linux, x64]
    needs: build-memory

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push doudouchevalier/memory:latest



  deploy-memory:
    runs-on: [self-hosted, linux, x64]
    needs: push-memory

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_KEY }}
          script: |
            docker pull doudouchevalier/memory:latest
            docker run -d -p 80:80 doudouchevalier/memory:latest
